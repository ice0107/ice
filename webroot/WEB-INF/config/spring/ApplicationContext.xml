<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/task  
		http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/websocket
        http://www.springframework.org/schema/websocket/spring-websocket.xsd">

	<task:annotation-driven />

	<bean id="cacheLoder" class="com.huawei.init.InitCache"
		init-method="initCache" scope="singleton"></bean>

	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="messages" />

	</bean>

	
	<bean id="viewResolver" class="com.huawei.web.MultiViewResover">
		<property name="resolvers">
			<map>
				<!-- 普通jsp页面解析器 -->
				<entry key="jsp">
					<bean
						class="org.springframework.web.servlet.view.InternalResourceViewResolver">
						<property name="viewClass"
							value="org.springframework.web.servlet.view.JstlView" />
						<property name="suffix" value=".jsp" />
					</bean>
				</entry>
				<!-- 普通html页面解析器 -->
				<entry key="htm">
					<bean
						class="org.springframework.web.servlet.view.InternalResourceViewResolver">
						<property name="viewClass"
							value="org.springframework.web.servlet.view.JstlView" />
						<property name="prefix" value="/" />
						<property name="suffix" value=".html" />
					</bean>
				</entry>
				<!-- tiles页面解析器 -->
				<entry key="tls">
					<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
						<property name="viewClass"
							value="org.springframework.web.servlet.view.tiles3.TilesView" />
					</bean>
				</entry>
			</map>
		</property>
	</bean>

	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json;charset=UTF-8</value>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- 上传文件 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- set the max upload size100MB -->
		<property name="maxUploadSize">
			<value>104857600</value>
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>

    <!--<bean id="onlineChatHandler" class="com.hitwh.manage.websocket.OnlineChatHandler"/>

    <websocket:handlers allowed-origins="*">
        <websocket:mapping path="/onlineChat" handler="onlineChatHandler"/>
        <websocket:handshake-interceptors>
            <bean class="com.hitwh.websocket.OnlineChatHandshakeInterceptor"/>
        </websocket:handshake-interceptors>
    </websocket:handlers>-->

   <!--  <bean class="org.springframework.web.socket.server.standard.ServletServerContainerFactoryBean">
        <property name="maxTextMessageBufferSize" value="8192"/>
        <property name="maxBinaryMessageBufferSize" value="8192"/>
        <property name="maxSessionIdleTimeout" value="900000"/>
        <property name="asyncSendTimeout" value="5000"/>
    </bean> -->

	<bean id="transactionManager"
		  class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<!--<bean id="checkOnlineJob" class="org.werun.werunmanager.util.CheckOnlineJob"/>
	<bean id="checkHalfHourJob" class="org.werun.werunmanager.util.CheckOnlineJob"/>
	<bean id="autoOfflineJob" class="org.werun.werunmanager.util.CheckOnlineJob"/>
	<bean id="weekChangeJob" class="org.werun.werunmanager.util.CheckOnlineJob"/>

	<bean id="checkOnlineJobDetail"
		  class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		&lt;!&ndash; 指定任务类 &ndash;&gt;
		<property name="targetObject" ref="checkOnlineJob" />
		&lt;!&ndash; 指定任务执行的方法 &ndash;&gt;
		<property name="targetMethod" value="checkOnlineUsers" />
	</bean>
	<bean id="checkHalfHourJobDetail"
		  class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		&lt;!&ndash; 指定任务类 &ndash;&gt;
		<property name="targetObject" ref="checkHalfHourJob" />
		&lt;!&ndash; 指定任务执行的方法 &ndash;&gt;
		<property name="targetMethod" value="checkHalfHour" />
	</bean>
	<bean id="autoOfflineJobDetail"
		  class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		&lt;!&ndash; 指定任务类 &ndash;&gt;
		<property name="targetObject" ref="autoOfflineJob" />
		&lt;!&ndash; 指定任务执行的方法 &ndash;&gt;
		<property name="targetMethod" value="autoOfflineUsers" />
	</bean>
	<bean id="weekChangeJobDetail"
		  class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		&lt;!&ndash; 指定任务类 &ndash;&gt;
		<property name="targetObject" ref="weekChangeJob" />
		&lt;!&ndash; 指定任务执行的方法 &ndash;&gt;
		<property name="targetMethod" value="weekChange" />
	</bean>

	<bean id="checkHalfHourJobTrigger"
		  class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="checkHalfHourJobDetail" />
		&lt;!&ndash; 每30min运行一次 &ndash;&gt;
		<property name="cronExpression" value="0 0/30 * * * ?" />
	</bean>
	<bean id="checkOnlineJobTrigger"
		  class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="checkOnlineJobDetail" />
		&lt;!&ndash; 每2min运行一次 &ndash;&gt;
		<property name="cronExpression" value="0 0/2 * * * ?" />
	</bean>
	<bean id="autoOfflineJobTrigger"
		  class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="autoOfflineJobDetail" />
		&lt;!&ndash; 每天23点运行一次 &ndash;&gt;
		<property name="cronExpression" value="0 0 23 * * ?" />
	</bean>
	<bean id="weekChangeJobTrigger"
		  class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="weekChangeJobDetail" />
		&lt;!&ndash; 每周一0:00运行一次 &ndash;&gt;
		<property name="cronExpression" value="0 0 0 ? * MON" />
	</bean>

	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="checkOnlineJobTrigger" />
				<ref bean="autoOfflineJobTrigger" />
				<ref bean="weekChangeJobTrigger" />
				<ref bean="checkHalfHourJobTrigger" />
			</list>
		</property>
	</bean>-->
</beans>